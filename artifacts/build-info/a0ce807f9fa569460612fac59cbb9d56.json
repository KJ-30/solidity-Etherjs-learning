{
	"id": "a0ce807f9fa569460612fac59cbb9d56",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"artifacts/EtherWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.4.0\r\npragma solidity ^0.8.27;\r\ncontract EtherWallet{\r\n\r\n    address payable  public  owner;\r\n    constructor(){\r\n        // 只有创建者才能提现\r\n        owner=payable(msg.sender);\r\n    }\r\n    function withdraw(uint256 amount) external {\r\n        // 切换其他合约·地址无法·提现\r\n        require(msg.sender == owner, \"Only owner can withdraw\");\r\n        // 提现1\r\n        // bool sent = payable(msg.sender).send(amount);\r\n        // require(sent, \"Failed to send Ether\");\r\n        // 提现2\r\n        // payable(msg.sender).transfer(amount);\r\n        //提现3\r\n        (bool sent, ) = payable(msg.sender).call{value: amount}(\"\");\r\n        require(sent, \"Failed to send Ether\"); \r\n    }\r\n\r\n    // 钱包可接受代币\r\n    receive() external payable { }\r\n\r\n    function getBalance() external view returns (uint256) {\r\n        return address(this).balance; \r\n    }\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"artifacts/EtherWallet.sol": {
				"EtherWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"artifacts/EtherWallet.sol\":109:966  contract EtherWallet{... */\n  mstore(0x40, 0x80)\n    /* \"artifacts/EtherWallet.sol\":175:272  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"artifacts/EtherWallet.sol\":239:244  owner */\n  0x00\n    /* \"artifacts/EtherWallet.sol\":239:264  owner=payable(msg.sender) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"artifacts/EtherWallet.sol\":253:263  msg.sender */\n  caller\n    /* \"artifacts/EtherWallet.sol\":239:264  owner=payable(msg.sender) */\n  or\n  swap1\n  sstore\n    /* \"artifacts/EtherWallet.sol\":109:966  contract EtherWallet{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"artifacts/EtherWallet.sol\":109:966  contract EtherWallet{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"artifacts/EtherWallet.sol\":861:963  function getBalance() external view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      revert(0x00, 0x00)\n    tag_8:\n      pop\n      mload(0x40)\n        /* \"artifacts/EtherWallet.sol\":933:954  address(this).balance */\n      selfbalance\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"artifacts/EtherWallet.sol\":861:963  function getBalance() external view returns (uint256) {... */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"artifacts/EtherWallet.sol\":278:785  function withdraw(uint256 amount) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"artifacts/EtherWallet.sol\":138:168  address payable  public  owner */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      pop\n      sload(0x00)\n      tag_19\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":561:593   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":543:594   */\n      dup2\n      mstore\n        /* \"#utility.yul\":531:533   */\n      0x20\n        /* \"#utility.yul\":516:534   */\n      add\n        /* \"artifacts/EtherWallet.sol\":138:168  address payable  public  owner */\n      tag_11\n        /* \"#utility.yul\":381:600   */\n      jump\n        /* \"artifacts/EtherWallet.sol\":278:785  function withdraw(uint256 amount) external {... */\n    tag_17:\n        /* \"artifacts/EtherWallet.sol\":407:412  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"artifacts/EtherWallet.sol\":393:403  msg.sender */\n      caller\n        /* \"artifacts/EtherWallet.sol\":393:412  msg.sender == owner */\n      eq\n        /* \"artifacts/EtherWallet.sol\":385:440  require(msg.sender == owner, \"Only owner can withdraw\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"artifacts/EtherWallet.sol\":385:440  require(msg.sender == owner, \"Only owner can withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":789:810   */\n      mstore\n        /* \"#utility.yul\":846:848   */\n      0x17\n        /* \"#utility.yul\":826:844   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":819:849   */\n      mstore\n        /* \"#utility.yul\":885:910   */\n      0x4f6e6c79206f776e65722063616e207769746864726177000000000000000000\n        /* \"#utility.yul\":865:883   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":858:911   */\n      mstore\n        /* \"#utility.yul\":928:946   */\n      0x64\n      add\n        /* \"artifacts/EtherWallet.sol\":385:440  require(msg.sender == owner, \"Only owner can withdraw\") */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"artifacts/EtherWallet.sol\":685:728  payable(msg.sender).call{value: amount}(\"\") */\n      mload(0x40)\n        /* \"artifacts/EtherWallet.sol\":670:679  bool sent */\n      0x00\n      swap1\n        /* \"artifacts/EtherWallet.sol\":693:703  msg.sender */\n      caller\n      swap1\n        /* \"artifacts/EtherWallet.sol\":717:723  amount */\n      dup4\n      swap1\n        /* \"artifacts/EtherWallet.sol\":670:679  bool sent */\n      dup4\n        /* \"artifacts/EtherWallet.sol\":685:728  payable(msg.sender).call{value: amount}(\"\") */\n      dup2\n        /* \"artifacts/EtherWallet.sol\":670:679  bool sent */\n      dup2\n        /* \"artifacts/EtherWallet.sol\":685:728  payable(msg.sender).call{value: amount}(\"\") */\n      dup2\n        /* \"artifacts/EtherWallet.sol\":717:723  amount */\n      dup6\n        /* \"artifacts/EtherWallet.sol\":693:703  msg.sender */\n      dup8\n        /* \"artifacts/EtherWallet.sol\":685:728  payable(msg.sender).call{value: amount}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_32\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_31)\n    tag_32:\n      0x60\n      swap2\n      pop\n    tag_31:\n      pop\n        /* \"artifacts/EtherWallet.sol\":669:728  (bool sent, ) = payable(msg.sender).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"artifacts/EtherWallet.sol\":747:751  sent */\n      dup1\n        /* \"artifacts/EtherWallet.sol\":739:776  require(sent, \"Failed to send Ether\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1369:1371   */\n      0x20\n        /* \"artifacts/EtherWallet.sol\":739:776  require(sent, \"Failed to send Ether\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1351:1372   */\n      mstore\n        /* \"#utility.yul\":1408:1410   */\n      0x14\n        /* \"#utility.yul\":1388:1406   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1381:1411   */\n      mstore\n      shl(0x61, 0x2330b4b632b2103a379039b2b7321022ba3432b9)\n        /* \"#utility.yul\":1427:1445   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1420:1470   */\n      mstore\n        /* \"#utility.yul\":1487:1505   */\n      0x64\n      add\n        /* \"artifacts/EtherWallet.sol\":739:776  require(sent, \"Failed to send Ether\") */\n      tag_26\n        /* \"#utility.yul\":1167:1511   */\n      jump\n        /* \"artifacts/EtherWallet.sol\":739:776  require(sent, \"Failed to send Ether\") */\n    tag_33:\n        /* \"artifacts/EtherWallet.sol\":321:785  {... */\n      pop\n        /* \"artifacts/EtherWallet.sol\":278:785  function withdraw(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:376   */\n    tag_16:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      0x00\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_39:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122025069487eae370097d30ecb27d6e8acf51da2ee848fe853e64c3254cef8731dc64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b505f80546001600160a01b031916331790556101f28061002d5f395ff3fe608060405260043610610036575f3560e01c806312065fe0146100415780632e1a7d4d146100605780638da5cb5b14610081575f5ffd5b3661003d57005b5f5ffd5b34801561004c575f5ffd5b506040514781526020015b60405180910390f35b34801561006b575f5ffd5b5061007f61007a3660046101a5565b6100b7565b005b34801561008c575f5ffd5b505f5461009f906001600160a01b031681565b6040516001600160a01b039091168152602001610057565b5f546001600160a01b031633146101155760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79206f776e65722063616e20776974686472617700000000000000000060448201526064015b60405180910390fd5b6040515f90339083908381818185875af1925050503d805f8114610154576040519150601f19603f3d011682016040523d82523d5f602084013e610159565b606091505b50509050806101a15760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161010c565b5050565b5f602082840312156101b5575f5ffd5b503591905056fea264697066735822122025069487eae370097d30ecb27d6e8acf51da2ee848fe853e64c3254cef8731dc64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1F2 DUP1 PUSH2 0x2D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x41 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x60 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x81 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x3D JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7F PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0xB7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x9F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x57 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E207769746864726177000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x159 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 MOD SWAP5 DUP8 0xEA CALLF 0x7009 PUSH30 0x30ECB27D6E8ACF51DA2EE848FE853E64C3254CEF8731DC64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "109:857:0:-:0;;;175:97;;;;;;;;;-1:-1:-1;239:5:0;:25;;-1:-1:-1;;;;;;239:25:0;253:10;239:25;;;109:857;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_63": {
									"entryPoint": null,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_47": {
									"entryPoint": 183,
									"id": 47,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1513:1",
										"nodeType": "YulBlock",
										"src": "0:1513:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:1",
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:25:1",
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nativeSrc": "160:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "266:110:1",
													"nodeType": "YulBlock",
													"src": "266:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "312:16:1",
																"nodeType": "YulBlock",
																"src": "312:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "321:1:1",
																					"nodeType": "YulLiteral",
																					"src": "321:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:1",
																					"nodeType": "YulLiteral",
																					"src": "324:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "314:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:1"
																			},
																			"nativeSrc": "314:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:1"
																		},
																		"nativeSrc": "314:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "287:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "296:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "283:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:1"
																		},
																		"nativeSrc": "283:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "308:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "279:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:1"
																},
																"nativeSrc": "279:32:1",
																"nodeType": "YulFunctionCall",
																"src": "279:32:1"
															},
															"nativeSrc": "276:52:1",
															"nodeType": "YulIf",
															"src": "276:52:1"
														},
														{
															"nativeSrc": "337:33:1",
															"nodeType": "YulAssignment",
															"src": "337:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "347:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:1"
																},
																"nativeSrc": "347:23:1",
																"nodeType": "YulFunctionCall",
																"src": "347:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "337:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "196:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "232:9:1",
														"nodeType": "YulTypedName",
														"src": "232:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "243:7:1",
														"nodeType": "YulTypedName",
														"src": "243:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "255:6:1",
														"nodeType": "YulTypedName",
														"src": "255:6:1",
														"type": ""
													}
												],
												"src": "196:180:1"
											},
											{
												"body": {
													"nativeSrc": "498:102:1",
													"nodeType": "YulBlock",
													"src": "498:102:1",
													"statements": [
														{
															"nativeSrc": "508:26:1",
															"nodeType": "YulAssignment",
															"src": "508:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "520:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "520:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "531:2:1",
																		"nodeType": "YulLiteral",
																		"src": "531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "516:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:1"
																},
																"nativeSrc": "516:18:1",
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "508:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "508:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "550:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "565:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "565:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "581:3:1",
																								"nodeType": "YulLiteral",
																								"src": "581:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "586:1:1",
																								"nodeType": "YulLiteral",
																								"src": "586:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "577:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "577:3:1"
																						},
																						"nativeSrc": "577:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "577:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "590:1:1",
																						"nodeType": "YulLiteral",
																						"src": "590:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "573:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "573:3:1"
																				},
																				"nativeSrc": "573:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "573:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "561:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:1"
																		},
																		"nativeSrc": "561:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "561:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "543:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:1"
																},
																"nativeSrc": "543:51:1",
																"nodeType": "YulFunctionCall",
																"src": "543:51:1"
															},
															"nativeSrc": "543:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "543:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "381:219:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "467:9:1",
														"nodeType": "YulTypedName",
														"src": "467:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "478:6:1",
														"nodeType": "YulTypedName",
														"src": "478:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "489:4:1",
														"nodeType": "YulTypedName",
														"src": "489:4:1",
														"type": ""
													}
												],
												"src": "381:219:1"
											},
											{
												"body": {
													"nativeSrc": "779:173:1",
													"nodeType": "YulBlock",
													"src": "779:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "796:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "796:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "807:2:1",
																		"nodeType": "YulLiteral",
																		"src": "807:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "789:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:1"
																},
																"nativeSrc": "789:21:1",
																"nodeType": "YulFunctionCall",
																"src": "789:21:1"
															},
															"nativeSrc": "789:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "789:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "830:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "841:2:1",
																				"nodeType": "YulLiteral",
																				"src": "841:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:2:1",
																		"nodeType": "YulLiteral",
																		"src": "846:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "819:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "819:6:1"
																},
																"nativeSrc": "819:30:1",
																"nodeType": "YulFunctionCall",
																"src": "819:30:1"
															},
															"nativeSrc": "819:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "819:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "869:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "869:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "880:2:1",
																				"nodeType": "YulLiteral",
																				"src": "880:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "865:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "865:3:1"
																		},
																		"nativeSrc": "865:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "865:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e207769746864726177",
																		"kind": "string",
																		"nativeSrc": "885:25:1",
																		"nodeType": "YulLiteral",
																		"src": "885:25:1",
																		"type": "",
																		"value": "Only owner can withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "858:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "858:6:1"
																},
																"nativeSrc": "858:53:1",
																"nodeType": "YulFunctionCall",
																"src": "858:53:1"
															},
															"nativeSrc": "858:53:1",
															"nodeType": "YulExpressionStatement",
															"src": "858:53:1"
														},
														{
															"nativeSrc": "920:26:1",
															"nodeType": "YulAssignment",
															"src": "920:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "943:2:1",
																		"nodeType": "YulLiteral",
																		"src": "943:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "928:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "928:3:1"
																},
																"nativeSrc": "928:18:1",
																"nodeType": "YulFunctionCall",
																"src": "928:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "920:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "605:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "756:9:1",
														"nodeType": "YulTypedName",
														"src": "756:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "770:4:1",
														"nodeType": "YulTypedName",
														"src": "770:4:1",
														"type": ""
													}
												],
												"src": "605:347:1"
											},
											{
												"body": {
													"nativeSrc": "1148:14:1",
													"nodeType": "YulBlock",
													"src": "1148:14:1",
													"statements": [
														{
															"nativeSrc": "1150:10:1",
															"nodeType": "YulAssignment",
															"src": "1150:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1157:3:1",
																"nodeType": "YulIdentifier",
																"src": "1157:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1150:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1150:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "957:205:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1132:3:1",
														"nodeType": "YulTypedName",
														"src": "1132:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1140:3:1",
														"nodeType": "YulTypedName",
														"src": "1140:3:1",
														"type": ""
													}
												],
												"src": "957:205:1"
											},
											{
												"body": {
													"nativeSrc": "1341:170:1",
													"nodeType": "YulBlock",
													"src": "1341:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1358:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1369:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1369:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1351:6:1"
																},
																"nativeSrc": "1351:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1351:21:1"
															},
															"nativeSrc": "1351:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1351:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1392:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1392:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1403:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1403:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1388:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1388:3:1"
																		},
																		"nativeSrc": "1388:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1388:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1408:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1381:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1381:6:1"
																},
																"nativeSrc": "1381:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1381:30:1"
															},
															"nativeSrc": "1381:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1381:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1431:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1431:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1442:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1442:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1427:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:1"
																		},
																		"nativeSrc": "1427:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:18:1"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204574686572",
																		"kind": "string",
																		"nativeSrc": "1447:22:1",
																		"nodeType": "YulLiteral",
																		"src": "1447:22:1",
																		"type": "",
																		"value": "Failed to send Ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1420:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:1"
																},
																"nativeSrc": "1420:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1420:50:1"
															},
															"nativeSrc": "1420:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "1420:50:1"
														},
														{
															"nativeSrc": "1479:26:1",
															"nodeType": "YulAssignment",
															"src": "1479:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1491:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1491:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1502:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1502:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1487:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1487:3:1"
																},
																"nativeSrc": "1487:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1487:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1479:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1479:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1167:344:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1318:9:1",
														"nodeType": "YulTypedName",
														"src": "1318:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1332:4:1",
														"nodeType": "YulTypedName",
														"src": "1332:4:1",
														"type": ""
													}
												],
												"src": "1167:344:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Only owner can withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610036575f3560e01c806312065fe0146100415780632e1a7d4d146100605780638da5cb5b14610081575f5ffd5b3661003d57005b5f5ffd5b34801561004c575f5ffd5b506040514781526020015b60405180910390f35b34801561006b575f5ffd5b5061007f61007a3660046101a5565b6100b7565b005b34801561008c575f5ffd5b505f5461009f906001600160a01b031681565b6040516001600160a01b039091168152602001610057565b5f546001600160a01b031633146101155760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79206f776e65722063616e20776974686472617700000000000000000060448201526064015b60405180910390fd5b6040515f90339083908381818185875af1925050503d805f8114610154576040519150601f19603f3d011682016040523d82523d5f602084013e610159565b606091505b50509050806101a15760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161010c565b5050565b5f602082840312156101b5575f5ffd5b503591905056fea264697066735822122025069487eae370097d30ecb27d6e8acf51da2ee848fe853e64c3254cef8731dc64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x41 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x60 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x81 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x3D JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7F PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0xB7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x9F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x57 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E207769746864726177000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x159 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 MOD SWAP5 DUP8 0xEA CALLF 0x7009 PUSH30 0x30ECB27D6E8ACF51DA2EE848FE853E64C3254CEF8731DC64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "109:857:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:102;;;;;;;;;;-1:-1:-1;861:102:0;;933:21;160:25:1;;148:2;133:18;861:102:0;;;;;;;;278:507;;;;;;;;;;-1:-1:-1;278:507:0;;;;;:::i;:::-;;:::i;:::-;;138:30;;;;;;;;;;-1:-1:-1;138:30:0;;;;-1:-1:-1;;;;;138:30:0;;;;;;-1:-1:-1;;;;;561:32:1;;;543:51;;531:2;516:18;138:30:0;381:219:1;278:507:0;407:5;;-1:-1:-1;;;;;407:5:0;393:10;:19;385:55;;;;-1:-1:-1;;;385:55:0;;807:2:1;385:55:0;;;789:21:1;846:2;826:18;;;819:30;885:25;865:18;;;858:53;928:18;;385:55:0;;;;;;;;;685:43;;670:9;;693:10;;717:6;;670:9;685:43;670:9;685:43;717:6;693:10;685:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:59;;;747:4;739:37;;;;-1:-1:-1;;;739:37:0;;1369:2:1;739:37:0;;;1351:21:1;1408:2;1388:18;;;1381:30;-1:-1:-1;;;1427:18:1;;;1420:50;1487:18;;739:37:0;1167:344:1;739:37:0;321:464;278:507;:::o;196:180:1:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:1;;196:180;-1:-1:-1;196:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "99600",
								"executionCost": "24379",
								"totalCost": "123979"
							},
							"external": {
								"getBalance()": "145",
								"owner()": "2357",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 109,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 109,
									"end": 966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 272,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 272,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 272,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 175,
									"end": 272,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 272,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 175,
									"end": 272,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 272,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 272,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 175,
									"end": 272,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 272,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 239,
									"end": 244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 264,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 239,
									"end": 264,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 239,
									"end": 264,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 253,
									"end": 263,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 239,
									"end": 264,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 239,
									"end": 264,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 239,
									"end": 264,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 966,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 966,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 966,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 109,
									"end": 966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 966,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122025069487eae370097d30ecb27d6e8acf51da2ee848fe853e64c3254cef8731dc64736f6c634300081e0033",
									".code": [
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 861,
											"end": 963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 861,
											"end": 963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 861,
											"end": 963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 861,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 861,
											"end": 963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 933,
											"end": 954,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 861,
											"end": 963,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 861,
											"end": 963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 861,
											"end": 963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 963,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 278,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 278,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 278,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 138,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 138,
											"end": 168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 138,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 138,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 138,
											"end": 168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 138,
											"end": 168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 138,
											"end": 168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 561,
											"end": 593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 561,
											"end": 593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 543,
											"end": 594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 543,
											"end": 594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 516,
											"end": 534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 138,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 381,
											"end": 600,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 278,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 278,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 407,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 407,
											"end": 412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 393,
											"end": 403,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 393,
											"end": 412,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 385,
											"end": 440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 385,
											"end": 440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 789,
											"end": 810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 846,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 826,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 826,
											"end": 844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 819,
											"end": 849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 910,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206F776E65722063616E207769746864726177000000000000000000"
										},
										{
											"begin": 865,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 865,
											"end": 883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 865,
											"end": 883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 858,
											"end": 911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 928,
											"end": 946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 385,
											"end": 440,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 385,
											"end": 440,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 385,
											"end": 440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 670,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 693,
											"end": 703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 693,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 717,
											"end": 723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 670,
											"end": 679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 670,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 693,
											"end": 703,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 685,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 669,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 669,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 739,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 739,
											"end": 776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 739,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 739,
											"end": 776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 739,
											"end": 776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 739,
											"end": 776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2330B4B632B2103A379039B2B7321022BA3432B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 739,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1167,
											"end": 1511,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 739,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 321,
											"end": 785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"artifacts/EtherWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"owner()": "8da5cb5b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"artifacts/EtherWallet.sol\":\"EtherWallet\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"artifacts/EtherWallet.sol\":{\"keccak256\":\"0x8bbac0fdabde6fbe5baa0f332389749182e526cdcb7c342c71c4bc34d7150da9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://846db37e7c81b67bab02e85004070e88758f1c0515b21f1614d3756e811ee5e9\",\"dweb:/ipfs/QmVg8xjfz9Ptow7Q8tyZDLBAqfukPi61JoShEyHHWQ45yC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "artifacts/EtherWallet.sol:EtherWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"artifacts/EtherWallet.sol": {
				"ast": {
					"absolutePath": "artifacts/EtherWallet.sol",
					"exportedSymbols": {
						"EtherWallet": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "83:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EtherWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "EtherWallet",
							"nameLocation": "118:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "163:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "138:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "138:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "188:84:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "239:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 9,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "253:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "257:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "253:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "245:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 7,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "245:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "245:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "239:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "239:25:0"
											}
										]
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:0:0"
									},
									"scope": 64,
									"src": "175:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "321:464:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "393:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "397:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "393:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 23,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "407:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "393:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e207769746864726177",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "414:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
																"typeString": "literal_string \"Only owner can withdraw\""
															},
															"value": "Only owner can withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e9f184f94ce24cc63fc5ec28c25b2861cda6fa2c12f36c889d1b47ea3eab6ac",
																"typeString": "literal_string \"Only owner can withdraw\""
															}
														],
														"id": 20,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "385:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "385:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "385:55:0"
											},
											{
												"assignments": [
													29,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "675:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 46,
														"src": "670:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 28,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "670:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 40,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "725:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 32,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "693:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 33,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "697:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "693:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "685:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 30,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "685:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "685:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "705:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "685:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 36,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "717:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "685:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "685:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "669:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 42,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "747:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204574686572",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "753:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															},
															"value": "Failed to send Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "739:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "739:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "739:37:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "287:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "304:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "296:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:16:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:0:0"
									},
									"scope": 64,
									"src": "278:507:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "850:3:0",
										"statements": []
									},
									"id": 51,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:0:0"
									},
									"scope": 64,
									"src": "823:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "915:48:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 58,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "941:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EtherWallet_$64",
																	"typeString": "contract EtherWallet"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EtherWallet_$64",
																	"typeString": "contract EtherWallet"
																}
															],
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 56,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "933:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "933:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "947:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "933:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 61,
												"nodeType": "Return",
												"src": "926:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "870:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "906:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:9:0"
									},
									"scope": 64,
									"src": "861:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 65,
							"src": "109:857:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "83:883:0"
				},
				"id": 0
			}
		}
	}
}